@page
@using Org.BouncyCastle.Crypto.Engines
@model Badminton.RazorWebApp.Pages.CourtDetailPage.IndexModel

@{
    ViewData["Title"] = "Index";
}

<style>
    .notice {
        position: fixed;
        top: 10px;
        left: 10px;
        background-color: #f8d7da;
        color: #721c24;
        padding: 10px;
        border: 1px solid #f5c6cb;
        border-radius: 5px;
        z-index: 1000; /* Ensures the notice appears above other elements */
    }
</style>

@if (TempData["message"] != null)
{
    <div class="notice">
        @TempData["message"]
    </div>
}

<h1>Index</h1>
<form>
    <div class="form-group">
        <label class="control-label">Search by slot</label>
        <select asp-for="Slot" class="form-control">
            @foreach (var item in Model.SlotList)
            {
                <option value="@item"> @item</option>
            }
        </select>
        <span asp-validation-for="CourtDetail.Slot" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label class="control-label">Search by Capacity</label>
        <input type="text" name="capacity" value="@Model.Capacity" class="form-control" />
        <span asp-validation-for="CourtDetail.Capacity" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label class="control-label">Search by Min Price</label>
        <input type="text" name="minPrice" value="@Model.MinPrice" class="form-control" />
        <span asp-validation-for="CourtDetail.Price" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label class="control-label">Search by Max Price</label>
        <input type="text" name="maxPrice" value="@Model.MaxPrice" class="form-control" />
        <span asp-validation-for="CourtDetail.Price" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="hidden" name="newCurPage" value="1" />
        <input type="submit" value="Search" class="btn btn-primary"/>
    </div>
</form>
@if (Model.IsAdmin)
{
    <p>
    <a asp-page="Create">Create New</a>
</p>
}
@if (Model.CourtDetail != null)
{
    <h1> Top Most Booked Court: @Model.CourtDetail.Court.Name at time: @Model.CourtDetail.Slot</h1>
}
@if (Model.CourtDetailList == null || Model.CourtDetailList.Count == 0)
{
    <h1>No record was found! please try again</h1>
}
else
{
    <table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.CourtDetailList[0].Slot)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CourtDetailList[0].Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CourtDetailList[0].Status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CourtDetailList[0].Notes)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CourtDetailList[0].Capacity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CourtDetailList[0].BookingCount)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.CourtDetailList[0].Court.Name)
        </th>
        <th></th>
        @if (HttpContext.Session.TryGetValue("cus", out byte[]? cus))
        {
            <th></th>
        }
    </tr>
    </thead>
    <tbody>
    @if (Model.CourtDetailList != null && Model.CourtDetailList.Count > 0)
    {
        @foreach (var item in Model.CourtDetailList)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Slot)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Notes)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Capacity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BookingCount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Court.Name)
                </td>
                    @if (Model.IsAdmin) {
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.CourtDetailId">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.CourtDetailId">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.CourtDetailId">Delete</a>
                </td>
                    }
                @if (cus != null)
                {
                    <td>
                        <form asp-page="../CartPage" method="post">
                            <input type="hidden" name="courtDetailID" value="@item.CourtDetailId" />
                            <button type="submit" class="btn btn-outline-primary">Book</button>
                        </form>
                    </td>
                }
            </tr>
        }
    }
    </tbody>
</table>
}


<div class="d-flex justify-content-between">
    <form method="get" class="form-inline">
        <input type="hidden" name="newCurPage" value="@(Model.CurrentPage - 1)" />
        <input type="hidden" name="capacity" value="@Model.Capacity" />
        <input type="hidden" name="minPrice" value="@Model.MinPrice" />
        <input type="hidden" name="maxPrice" value="@Model.MaxPrice" />
        <input type="hidden" asp-for="Slot" value="@Model.Slot" />
        <button type="submit" class="btn btn-outline-primary" @(Model.CurrentPage <= 1 ? "disabled" : "")>Previous</button>
    </form>

    <span>Page @Model.CurrentPage of @Model.TotalPages</span>

    <form method="get" class="form-inline">
        <input type="hidden" name="newCurPage" value="@(Model.CurrentPage + 1)" />
        <input type="hidden" name="capacity" value="@Model.Capacity" />
        <input type="hidden" name="minPrice" value="@Model.MinPrice" />
        <input type="hidden" name="maxPrice" value="@Model.MaxPrice" />
        <input type="hidden" asp-for="Slot" value="@Model.Slot" />
        <button type="submit" class="btn btn-outline-primary" @(Model.CurrentPage >= Model.TotalPages ? "disabled" : "")>Next</button>
    </form>
</div>
