@page
@model Badminton.RazorWebApp.Pages.OrderDetailPage.IndexModel

@{
    ViewData["Title"] = "Index";
}
@if (TempData["message"] != null)
{
    <div class="alert alert-danger">
        @TempData["message"]
    </div>
}
<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<form asp-asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            <form method="get" class="form-inline">
                <input type="hidden" name="orderID" value="@Model.OrderID" />
                <input type="hidden" name="newCurPage" value="1" />
                Amount range <input name="start" value="@Model.Start" />
                ... <input name="end" value="@Model.End" />
                <button type="submit" class="btn btn-outline-primary">Search</button>
            </form>
            <a asp-page="../OrderPage/Index">Back to order</a>
        </p>
    </div>
</form>
@if (Model.OrderDetails == null || Model.OrderDetails.Count <= 0)
{
    <p>No order detail in this range</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.OrderDetails[0].Amount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderDetails[0].CourtDetail.Slot)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderDetails[0].Order.Type)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderDetails[0].Order.Customer.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderDetails[0].CourtDetail.Status)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.OrderDetails)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CourtDetail.Slot)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Order.Type)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Order.Customer.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CourtDetail.Status)
                    </td>
                    <td>
                        <a asp-page="./Edit" asp-route-id="@item.OrderDetailId">Edit</a> |
                        <a asp-page="./Details" asp-route-id="@item.OrderDetailId">Details</a> |
                        <a asp-page="./Delete" asp-route-id="@item.OrderDetailId">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="d-flex justify-content-between">
        <form method="get" class="form-inline">
            <input type="hidden" name="newCurPage" value="@(Model.CurrentPage - 1)" />
            <input type="hidden" name="start" value="@Model.Start" />
            <input type="hidden" name="end" value="@Model.End" />
            <input type="hidden" name="orderID" value="@Model.OrderID" />
            <button type="submit" class="btn btn-outline-primary" @(Model.CurrentPage <= 1 ? "disabled" : "")>Previous</button>
        </form>

        <span>Page @Model.CurrentPage of @Model.TotalPages</span>

        <form method="get" class="form-inline">
            <input type="hidden" name="newCurPage" value="@(Model.CurrentPage + 1)" />
            <input type="hidden" name="start" value="@Model.Start" />
            <input type="hidden" name="end" value="@Model.End" />
            <input type="hidden" name="orderID" value="@Model.OrderID" />
            <button type="submit" class="btn btn-outline-primary" @(Model.CurrentPage >= Model.TotalPages ? "disabled" : "")>Next</button>
        </form>
    </div>
}

